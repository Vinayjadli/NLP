{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "from tensorflow.keras.preprocessing.text import one_hot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-18-507f1072eaed>, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-18-507f1072eaed>\"\u001b[1;36m, line \u001b[1;32m1\u001b[0m\n\u001b[1;33m    sent=[before his eleventh birthday,\u001b[0m\n\u001b[1;37m                 ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "#sent=[  'the glass of milk',\n",
    "     'the glass of juice',\n",
    "     'the cup of tea',\n",
    "    'I am a good boy',\n",
    "     'I am a good developer',\n",
    "     'understand the meaning of words',\n",
    "     'your videos are good',]\n",
    "\n",
    "[before his eleventh birthday,\n",
    "the Dursleys control Harry’s life, \n",
    "keeping from him knowledge of his past and understanding of his identity,\n",
    "In Harry Potter and the Chamber of Secrets]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "sent=['before his eleventh birthday',\n",
    "'the Dursleys control Harry’s life', \n",
    "'keeping from him knowledge of his past and understanding of his identity',\n",
    "'In Harry Potter and the Chamber of Secrets']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "voc_size=10000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "one_hot_rep=  [one_hot(word,voc_size) for word in sent]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[6154, 7587, 6145, 1921],\n",
       " [1852, 9627, 1581, 7070, 3812],\n",
       " [7106, 4197, 460, 9111, 3689, 7587, 1217, 2451, 1310, 3689, 7587, 1696],\n",
       " [6400, 2884, 9595, 2451, 1852, 9122, 3689, 1487]]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "one_hot_rep"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "from tensorflow.keras.layers import Embedding\n",
    "from tensorflow.keras.preprocessing.sequence import pad_sequences\n",
    "from tensorflow.keras.models import Sequential"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "12\n"
     ]
    }
   ],
   "source": [
    "sent_length=0\n",
    "for word in sent:\n",
    "    g=word.split(' ')\n",
    "    if len(g)>sent_length:\n",
    "        sent_length=len(g)\n",
    "        \n",
    "print(sent_length)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[   0,    0,    0,    0,    0,    0,    0,    0, 6154, 7587, 6145,\n",
       "        1921],\n",
       "       [   0,    0,    0,    0,    0,    0,    0, 1852, 9627, 1581, 7070,\n",
       "        3812],\n",
       "       [7106, 4197,  460, 9111, 3689, 7587, 1217, 2451, 1310, 3689, 7587,\n",
       "        1696],\n",
       "       [   0,    0,    0,    0, 6400, 2884, 9595, 2451, 1852, 9122, 3689,\n",
       "        1487]])"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "embedded_docs=pad_sequences(one_hot_rep,padding='pre',maxlen=sent_length)\n",
    "embedded_docs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "dim=10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "model=Sequential()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "model.add(Embedding(voc_size,10,input_length=sent_length))\n",
    "model.compile('adam','mse')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "embedding (Embedding)        (None, 12, 10)            100000    \n",
      "=================================================================\n",
      "Total params: 100,000\n",
      "Trainable params: 100,000\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[[-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-4.64958437e-02  3.58181484e-02  4.64397110e-02 -1.29000321e-02\n",
      "   -2.03410033e-02 -1.50427110e-02  4.97977026e-02 -2.91211493e-02\n",
      "    2.84166001e-02  1.81095339e-02]\n",
      "  [ 3.73104550e-02  4.72815298e-02  4.57068942e-02 -3.06375381e-02\n",
      "    3.58695127e-02  3.94985564e-02  2.93633975e-02 -4.39857021e-02\n",
      "   -4.42438200e-03  4.26390879e-02]\n",
      "  [-2.63106357e-02 -5.81604242e-03  1.97989978e-02 -4.18966636e-02\n",
      "    4.16101702e-02 -5.85819408e-03 -3.19910422e-02 -8.74682516e-03\n",
      "   -4.84815352e-02  2.67462805e-03]\n",
      "  [-3.25709954e-02 -2.20646616e-02  1.42034143e-03 -2.91006919e-02\n",
      "   -2.86124647e-04  2.26355903e-02  2.44025253e-02 -1.87039375e-04\n",
      "   -7.96161592e-04  7.08431005e-03]]\n",
      "\n",
      " [[-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-4.88520153e-02  2.12445147e-02  1.17774978e-02 -3.17327157e-02\n",
      "    3.66745479e-02 -2.92757992e-02  2.53010727e-02 -2.86407229e-02\n",
      "    6.96089119e-03 -4.72422838e-02]\n",
      "  [ 1.51275657e-02  4.03617881e-02  2.78527178e-02  1.77020319e-02\n",
      "    2.75305659e-03  2.91870348e-02 -3.68326902e-02 -1.76167116e-02\n",
      "   -5.83007932e-06 -4.91152294e-02]\n",
      "  [ 2.90052332e-02  3.10994871e-02 -1.94107890e-02 -4.21285406e-02\n",
      "   -1.24288686e-02 -4.89857569e-02  2.35586278e-02  1.06894970e-03\n",
      "   -4.49459665e-02  3.70176770e-02]\n",
      "  [-1.97392832e-02 -9.57454368e-03 -1.28306635e-02 -3.24691534e-02\n",
      "   -4.71636765e-02 -4.18164358e-02 -1.59002915e-02 -4.52012680e-02\n",
      "   -4.47983667e-03  1.24163516e-02]\n",
      "  [-2.92128082e-02  4.62225415e-02 -8.74855369e-03 -3.99104506e-03\n",
      "   -3.16798687e-02  1.09393708e-02 -4.78460789e-02  7.01607391e-03\n",
      "   -1.04753263e-02  1.09271519e-02]]\n",
      "\n",
      " [[-1.37649849e-03 -1.41677149e-02 -2.51154900e-02 -2.12649945e-02\n",
      "   -9.99313593e-03 -3.46499570e-02  9.68294218e-03  2.06733234e-02\n",
      "    1.26951002e-02 -2.69118547e-02]\n",
      "  [ 1.62185170e-02  2.36970522e-02  3.54669951e-02  4.68550958e-02\n",
      "   -2.14636810e-02 -3.60995531e-03 -5.51003218e-03  4.37665246e-02\n",
      "   -1.99654941e-02  1.97152048e-03]\n",
      "  [ 1.36910565e-02  4.66033258e-02 -3.76091823e-02  4.98954318e-02\n",
      "    1.52149312e-02 -4.16392572e-02 -3.02286502e-02 -3.82296667e-02\n",
      "   -2.53788475e-02  2.19825543e-02]\n",
      "  [-3.35486755e-02 -3.20397988e-02 -2.99980529e-02 -2.87871361e-02\n",
      "    3.12783979e-02 -4.82059121e-02 -3.28144655e-02 -7.81258196e-03\n",
      "    4.52864170e-03  3.19756567e-04]\n",
      "  [-1.87716968e-02  4.80666794e-02 -4.21011820e-02  1.56155974e-03\n",
      "   -2.43938211e-02  2.20618956e-02 -2.85073277e-02  3.44610251e-02\n",
      "   -2.51619350e-02  1.55385248e-02]\n",
      "  [ 3.73104550e-02  4.72815298e-02  4.57068942e-02 -3.06375381e-02\n",
      "    3.58695127e-02  3.94985564e-02  2.93633975e-02 -4.39857021e-02\n",
      "   -4.42438200e-03  4.26390879e-02]\n",
      "  [-2.25254782e-02  4.08287756e-02 -1.05478987e-02 -2.65215281e-02\n",
      "    2.44753622e-02  1.26111992e-02  4.56276797e-02 -3.81596461e-02\n",
      "   -2.06981543e-02  3.66271250e-02]\n",
      "  [-4.33044098e-02 -1.72554627e-02  1.83915533e-02 -2.49100812e-02\n",
      "   -4.70488183e-02  3.82464193e-02  3.41459848e-02 -5.70851564e-03\n",
      "   -1.49099119e-02  3.75418328e-02]\n",
      "  [ 4.81253974e-02  6.89005852e-03 -4.31460030e-02 -3.31923850e-02\n",
      "   -4.21912558e-02  3.95537652e-02  2.04650275e-02  2.96384096e-03\n",
      "   -4.17659394e-02  2.24244110e-02]\n",
      "  [-1.87716968e-02  4.80666794e-02 -4.21011820e-02  1.56155974e-03\n",
      "   -2.43938211e-02  2.20618956e-02 -2.85073277e-02  3.44610251e-02\n",
      "   -2.51619350e-02  1.55385248e-02]\n",
      "  [ 3.73104550e-02  4.72815298e-02  4.57068942e-02 -3.06375381e-02\n",
      "    3.58695127e-02  3.94985564e-02  2.93633975e-02 -4.39857021e-02\n",
      "   -4.42438200e-03  4.26390879e-02]\n",
      "  [ 2.77712978e-02 -4.99172322e-02  3.22547294e-02 -3.15496810e-02\n",
      "   -2.04271078e-03  3.28361727e-02  1.92313269e-03  4.92811464e-02\n",
      "    4.64001931e-02  3.07206400e-02]]\n",
      "\n",
      " [[-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [-6.53922558e-03  1.67377852e-02  2.76118517e-03  4.24485244e-02\n",
      "   -7.20907003e-04  3.75265814e-02 -3.51687297e-02  2.31306590e-02\n",
      "   -3.61678004e-02 -1.50101259e-03]\n",
      "  [ 3.10094692e-02 -2.49689948e-02 -4.50812690e-02  2.79322527e-02\n",
      "   -3.32925692e-02  2.63757594e-02  2.22802646e-02 -4.92870212e-02\n",
      "   -3.45534310e-02 -4.02174219e-02]\n",
      "  [ 4.70434465e-02 -2.17543729e-02 -3.98273952e-02 -7.26879761e-03\n",
      "    4.76264991e-02 -1.21934041e-02 -2.36441493e-02 -1.09289773e-02\n",
      "   -3.55841033e-02 -3.22200879e-02]\n",
      "  [-1.76755078e-02 -1.60646662e-02 -1.76592246e-02  2.84822024e-02\n",
      "   -2.33360287e-02 -1.45735852e-02 -2.06598043e-02  3.15631293e-02\n",
      "   -8.20032507e-03  1.85028054e-02]\n",
      "  [-4.33044098e-02 -1.72554627e-02  1.83915533e-02 -2.49100812e-02\n",
      "   -4.70488183e-02  3.82464193e-02  3.41459848e-02 -5.70851564e-03\n",
      "   -1.49099119e-02  3.75418328e-02]\n",
      "  [-4.88520153e-02  2.12445147e-02  1.17774978e-02 -3.17327157e-02\n",
      "    3.66745479e-02 -2.92757992e-02  2.53010727e-02 -2.86407229e-02\n",
      "    6.96089119e-03 -4.72422838e-02]\n",
      "  [ 4.74587567e-02 -2.82654408e-02 -4.01062369e-02  4.38104905e-02\n",
      "    3.36657055e-02 -1.47956237e-02  1.84039026e-03 -4.39680219e-02\n",
      "   -3.07171941e-02 -2.05541737e-02]\n",
      "  [-1.87716968e-02  4.80666794e-02 -4.21011820e-02  1.56155974e-03\n",
      "   -2.43938211e-02  2.20618956e-02 -2.85073277e-02  3.44610251e-02\n",
      "   -2.51619350e-02  1.55385248e-02]\n",
      "  [ 3.12166102e-02 -1.77217722e-02  9.12631676e-03 -2.67345067e-02\n",
      "   -1.73583142e-02  3.64861824e-02 -3.94443981e-02 -9.30010155e-03\n",
      "   -9.24556330e-03 -3.07232626e-02]]]\n"
     ]
    }
   ],
   "source": [
    "print(model.predict(embedded_docs))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "# the below code is to tell that how it will going to change every word into the different vectors according to the dimensions\n",
    "# so below code is representing only the first sentences"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "embedded_docs[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-0.00653923  0.01673779  0.00276119  0.04244852 -0.00072091  0.03752658\n",
      "  -0.03516873  0.02313066 -0.0361678  -0.00150101]\n",
      " [-0.00653923  0.01673779  0.00276119  0.04244852 -0.00072091  0.03752658\n",
      "  -0.03516873  0.02313066 -0.0361678  -0.00150101]\n",
      " [-0.00653923  0.01673779  0.00276119  0.04244852 -0.00072091  0.03752658\n",
      "  -0.03516873  0.02313066 -0.0361678  -0.00150101]\n",
      " [-0.00653923  0.01673779  0.00276119  0.04244852 -0.00072091  0.03752658\n",
      "  -0.03516873  0.02313066 -0.0361678  -0.00150101]\n",
      " [-0.00653923  0.01673779  0.00276119  0.04244852 -0.00072091  0.03752658\n",
      "  -0.03516873  0.02313066 -0.0361678  -0.00150101]\n",
      " [-0.00653923  0.01673779  0.00276119  0.04244852 -0.00072091  0.03752658\n",
      "  -0.03516873  0.02313066 -0.0361678  -0.00150101]\n",
      " [-0.00653923  0.01673779  0.00276119  0.04244852 -0.00072091  0.03752658\n",
      "  -0.03516873  0.02313066 -0.0361678  -0.00150101]\n",
      " [-0.00653923  0.01673779  0.00276119  0.04244852 -0.00072091  0.03752658\n",
      "  -0.03516873  0.02313066 -0.0361678  -0.00150101]\n",
      " [-0.04649584  0.03581815  0.04643971 -0.01290003 -0.020341   -0.01504271\n",
      "   0.0497977  -0.02912115  0.0284166   0.01810953]\n",
      " [ 0.03731045  0.04728153  0.04570689 -0.03063754  0.03586951  0.03949856\n",
      "   0.0293634  -0.0439857  -0.00442438  0.04263909]\n",
      " [-0.02631064 -0.00581604  0.019799   -0.04189666  0.04161017 -0.00585819\n",
      "  -0.03199104 -0.00874683 -0.04848154  0.00267463]\n",
      " [-0.032571   -0.02206466  0.00142034 -0.02910069 -0.00028612  0.02263559\n",
      "   0.02440253 -0.00018704 -0.00079616  0.00708431]]\n"
     ]
    }
   ],
   "source": [
    "print(model.predict(embedded_docs)[0])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
